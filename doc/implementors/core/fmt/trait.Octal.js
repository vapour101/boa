(function() {var implementors = {};
implementors["boa"] = [{"text":"impl Octal for FunctionFlags","synthetic":false,"types":[]},{"text":"impl Octal for Attribute","synthetic":false,"types":[]},{"text":"impl Octal for RegExpFlags","synthetic":false,"types":[]}];
implementors["boa_tester"] = [{"text":"impl Octal for TestFlags","synthetic":false,"types":[]}];
implementors["git2"] = [{"text":"impl Octal for Sort","synthetic":false,"types":[]},{"text":"impl Octal for CredentialType","synthetic":false,"types":[]},{"text":"impl Octal for IndexEntryFlag","synthetic":false,"types":[]},{"text":"impl Octal for IndexEntryExtendedFlag","synthetic":false,"types":[]},{"text":"impl Octal for IndexAddOption","synthetic":false,"types":[]},{"text":"impl Octal for RepositoryOpenFlags","synthetic":false,"types":[]},{"text":"impl Octal for RevparseMode","synthetic":false,"types":[]},{"text":"impl Octal for MergeAnalysis","synthetic":false,"types":[]},{"text":"impl Octal for MergePreference","synthetic":false,"types":[]},{"text":"impl Octal for Status","synthetic":false,"types":[]},{"text":"impl Octal for RepositoryInitMode","synthetic":false,"types":[]},{"text":"impl Octal for SubmoduleStatus","synthetic":false,"types":[]},{"text":"impl Octal for PathspecFlags","synthetic":false,"types":[]},{"text":"impl Octal for CheckoutNotificationType","synthetic":false,"types":[]},{"text":"impl Octal for DiffStatsFormat","synthetic":false,"types":[]},{"text":"impl Octal for StashApplyFlags","synthetic":false,"types":[]},{"text":"impl Octal for StashFlags","synthetic":false,"types":[]},{"text":"impl Octal for AttrCheckFlags","synthetic":false,"types":[]},{"text":"impl Octal for DiffFlags","synthetic":false,"types":[]}];
implementors["num_bigint"] = [{"text":"impl Octal for BigInt","synthetic":false,"types":[]},{"text":"impl Octal for BigUint","synthetic":false,"types":[]}];
implementors["tinyvec"] = [{"text":"impl&lt;A:&nbsp;Array&gt; Octal for ArrayVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A::Item: Octal,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Array&gt; Octal for TinyVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A::Item: Octal,&nbsp;</span>","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()