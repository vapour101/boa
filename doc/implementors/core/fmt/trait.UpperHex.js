(function() {var implementors = {};
implementors["boa"] = [{"text":"impl UpperHex for FunctionFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for Attribute","synthetic":false,"types":[]},{"text":"impl UpperHex for RegExpFlags","synthetic":false,"types":[]}];
implementors["boa_tester"] = [{"text":"impl UpperHex for TestFlags","synthetic":false,"types":[]}];
implementors["git2"] = [{"text":"impl UpperHex for Sort","synthetic":false,"types":[]},{"text":"impl UpperHex for CredentialType","synthetic":false,"types":[]},{"text":"impl UpperHex for IndexEntryFlag","synthetic":false,"types":[]},{"text":"impl UpperHex for IndexEntryExtendedFlag","synthetic":false,"types":[]},{"text":"impl UpperHex for IndexAddOption","synthetic":false,"types":[]},{"text":"impl UpperHex for RepositoryOpenFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for RevparseMode","synthetic":false,"types":[]},{"text":"impl UpperHex for MergeAnalysis","synthetic":false,"types":[]},{"text":"impl UpperHex for MergePreference","synthetic":false,"types":[]},{"text":"impl UpperHex for Status","synthetic":false,"types":[]},{"text":"impl UpperHex for RepositoryInitMode","synthetic":false,"types":[]},{"text":"impl UpperHex for SubmoduleStatus","synthetic":false,"types":[]},{"text":"impl UpperHex for PathspecFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for CheckoutNotificationType","synthetic":false,"types":[]},{"text":"impl UpperHex for DiffStatsFormat","synthetic":false,"types":[]},{"text":"impl UpperHex for StashApplyFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for StashFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for AttrCheckFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for DiffFlags","synthetic":false,"types":[]}];
implementors["num_bigint"] = [{"text":"impl UpperHex for BigInt","synthetic":false,"types":[]},{"text":"impl UpperHex for BigUint","synthetic":false,"types":[]}];
implementors["tinyvec"] = [{"text":"impl&lt;A:&nbsp;Array&gt; UpperHex for ArrayVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A::Item: UpperHex,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Array&gt; UpperHex for TinyVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A::Item: UpperHex,&nbsp;</span>","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()