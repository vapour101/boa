(function() {var implementors = {};
implementors["boa"] = [{"text":"impl Binary for FunctionFlags","synthetic":false,"types":[]},{"text":"impl Binary for Attribute","synthetic":false,"types":[]},{"text":"impl Binary for RegExpFlags","synthetic":false,"types":[]}];
implementors["boa_tester"] = [{"text":"impl Binary for TestFlags","synthetic":false,"types":[]}];
implementors["git2"] = [{"text":"impl Binary for Sort","synthetic":false,"types":[]},{"text":"impl Binary for CredentialType","synthetic":false,"types":[]},{"text":"impl Binary for IndexEntryFlag","synthetic":false,"types":[]},{"text":"impl Binary for IndexEntryExtendedFlag","synthetic":false,"types":[]},{"text":"impl Binary for IndexAddOption","synthetic":false,"types":[]},{"text":"impl Binary for RepositoryOpenFlags","synthetic":false,"types":[]},{"text":"impl Binary for RevparseMode","synthetic":false,"types":[]},{"text":"impl Binary for MergeAnalysis","synthetic":false,"types":[]},{"text":"impl Binary for MergePreference","synthetic":false,"types":[]},{"text":"impl Binary for Status","synthetic":false,"types":[]},{"text":"impl Binary for RepositoryInitMode","synthetic":false,"types":[]},{"text":"impl Binary for SubmoduleStatus","synthetic":false,"types":[]},{"text":"impl Binary for PathspecFlags","synthetic":false,"types":[]},{"text":"impl Binary for CheckoutNotificationType","synthetic":false,"types":[]},{"text":"impl Binary for DiffStatsFormat","synthetic":false,"types":[]},{"text":"impl Binary for StashApplyFlags","synthetic":false,"types":[]},{"text":"impl Binary for StashFlags","synthetic":false,"types":[]},{"text":"impl Binary for AttrCheckFlags","synthetic":false,"types":[]},{"text":"impl Binary for DiffFlags","synthetic":false,"types":[]}];
implementors["num_bigint"] = [{"text":"impl Binary for BigInt","synthetic":false,"types":[]},{"text":"impl Binary for BigUint","synthetic":false,"types":[]}];
implementors["tinyvec"] = [{"text":"impl&lt;A:&nbsp;Array&gt; Binary for ArrayVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A::Item: Binary,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;A:&nbsp;Array&gt; Binary for TinyVec&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A::Item: Binary,&nbsp;</span>","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()